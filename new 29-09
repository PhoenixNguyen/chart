<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>

<script>
	$(document).ready(function(){
		//load 1st
		if('<c:out value="${paramValues.filter_merchant}"/>' != ''){
			<c:forEach var="item" items="${paramValues.filter_merchant}">
				filter_merchant.push('<c:out value="${item}"/>');
			</c:forEach>
		}
		else{
			
			<c:forEach var="item" items="${model.facetAllsMap['merchant'] }">
				filter_merchant.push('<c:out value="${item.getTerm()}"/>');
			</c:forEach>
		}
		if('<c:out value="${paramValues.filter_provider}"/>' != ''){
			<c:forEach var="item" items="${paramValues.filter_provider}">
				filter_provider.push('<c:out value="${item}"/>');
			</c:forEach>
		}
		else{
			<c:forEach var="item" items="${model.facetAllsMap['paymentProvider'] }">
				filter_provider.push('<c:out value="${item.getTerm()}"/>');
			</c:forEach>
		}
		if('<c:out value="${paramValues.filter_card_type}"/>' != ''){
			<c:forEach var="item" items="${paramValues.filter_card_type}">
				filter_card_type.push('<c:out value="${item}"/>');
			</c:forEach>
		}
		else{
			<c:forEach var="item" items="${model.facetAllsMap['type'] }">
				filter_card_type.push('<c:out value="${item.getTerm()}"/>');
			</c:forEach>
		}
		//alert(filter_provider);
		
		var today = new Date();
		var pick_date = $('input[name=time_search]').val();
		load_time_detail(pick_date, filter_merchant, filter_provider, filter_card_type);
		
		//load with day
		/* $('input[name=time_search]').change(function(){
			load_time_detail($(this).val(), filter_merchant, filter_provider, filter_card_type);
			
		}); */
	});

	var time = '0.1h';//
	var urlGet = 'http://localhost:9200/cardcdrs/_search?pretty=true';
	
	var load_time = function(timePicked, filter_merchant, filter_provider, filter_card_type) {
		//var timePicked = '18/09/2014';
		var fromDate = Date.parse(timePicked);
		var toDate = Date.parse(timePicked);
		toDate.setDate(toDate.getDate() + 1);
		
		$.ajax({
			url : urlGet,
			type : 'POST',
			data : JSON.stringify({
				"query" : {
					"match_all" : {}
				},
				"facets" : {
					"published" : {
						"date_histogram" : {
							"field" : "timestamp",
							"interval" : time
						}
					}

				}
				,
				"query": {
				    "filtered":{
				    "filter" : {
				    	"and" : [{
				                
				                "range" : {
					                "timestamp" : {
					                    "from": fromDate.getTime(),
					                    "to": toDate.getTime()
					                }
				            	}
							},
							{
								"query" : {
									"terms" : {
										"merchant" : filter_merchant
										
									}
								}
							},
							{
								"query" : {
									"terms" : {
										"paymentProvider" : filter_provider
									}
								}
							},
							{
								"query" : {
									"terms" : {
										"type" : filter_card_type
									}
								}
							}
							]
							
				        }
				    }
			     } 
		        		        
			}),
			dataType : 'json',
			processData : false,
			success : function(json, statusText, xhr) {
				//alert('a');
				return draw(json.facets.published.entries);
			},
			error : function(xhr, message, error) {
				console.error("Error while loading data from ElasticSearch",
						message);
				throw (error);
			}
		});
	};
	var listSuccess, listError, listWrong;
	var load_time_detail = function(timePicked, filter_merchant, filter_provider, filter_card_type) {
		//var timePicked = '18/09/2014';
		var fromDate = Date.parse(timePicked);
		var toDate = Date.parse(timePicked);
		toDate.setDate(toDate.getDate() + 1);
		
		$.ajax({
			url : urlGet,
			type : 'POST',
			data : JSON.stringify({
				"query" : {
					"match_all" : {}
				},
				"facets" : {
					"published" : {
						"date_histogram" : {
							"field" : "timestamp",
							"interval" : time
						}
					}

				},
				"query": {
				    "filtered":{
				    "filter" : {
				    	"and" : [{
				                
				                "range" : {
					                "timestamp" : {
					                    "from": fromDate.getTime(),
					                    "to": toDate.getTime()
					                }
				            	}
							},
							{
								"query" : {
									"terms" : {
										"status" : statusSuccess
										
									}
								}
							},
							{
								"query" : {
									"terms" : {
										"merchant" : filter_merchant
										
									}
								}
							},
							{
								"query" : {
									"terms" : {
										"paymentProvider" : filter_provider
									}
								}
							},
							{
								"query" : {
									"terms" : {
										"type" : filter_card_type
									}
								}
							}
							]
							
				        }
				    }
			     } 
		        		        
			}),
			dataType : 'json',
			processData : false,
			success : function(json, statusText, xhr) {
				//alert(json);
				listSuccess = json.facets.published.entries;
			},
			error : function(xhr, message, error) {
				console.error("Error while loading data from ElasticSearch",
						message);
				throw (error);
			}
		});
		$.ajax({
			url : urlGet,
			type : 'POST',
			data : JSON.stringify({
				"query" : {
					"match_all" : {}
				},
				"facets" : {
					"published" : {
						"date_histogram" : {
							"field" : "timestamp",
							"interval" : time
						}
					}

				},
				"query": {
				    "filtered":{
				    "filter" : {
				    	"and" : [{
				                
				                "range" : {
					                "timestamp" : {
					                    "from": fromDate.getTime(),
					                    "to": toDate.getTime()
					                }
				            	}
							},
							{
								"query" : {
									"terms" : {
										"status" : statusError
									}
								}
							},
							{
								"query" : {
									"terms" : {
										"merchant" : filter_merchant
										
									}
								}
							},
							{
								"query" : {
									"terms" : {
										"paymentProvider" : filter_provider
									}
								}
							},
							{
								"query" : {
									"terms" : {
										"type" : filter_card_type
									}
								}
							}
							]
							
				        }
				    }
			     } 
		        		        
			}),
			dataType : 'json',
			processData : false,
			success : function(json, statusText, xhr) {
				//alert(json);
				listError = json.facets.published.entries;
			},
			error : function(xhr, message, error) {
				console.error("Error while loading data from ElasticSearch",
						message);
				throw (error);
			}
		});
		$.ajax({
			url : urlGet,
			type : 'POST',
			data : JSON.stringify({
				"query" : {
					"match_all" : {}
				},
				"facets" : {
					"published" : {
						"date_histogram" : {
							"field" : "timestamp",
							"interval" : time
						}
					}

				},
				"query": {
				    "filtered":{
				    "filter" : {
				    	"and" : [{
				                
				                "range" : {
					                "timestamp" : {
					                    "from": fromDate.getTime(),
					                    "to": toDate.getTime()
					                }
				            	}
							},
							{
								"query" : {
									"terms" : {
										"status" : statusWrong
										
									}
								}
							},
							{
								"query" : {
									"terms" : {
										"merchant" : filter_merchant
										
									}
								}
							},
							{
								"query" : {
									"terms" : {
										"paymentProvider" : filter_provider
									}
								}
							},
							{
								"query" : {
									"terms" : {
										"type" : filter_card_type
									}
								}
							}
							]
							
				        }
				    }
			     } 
		        		        
			}),
			dataType : 'json',
			processData : false,
			success : function(json, statusText, xhr) {
				//alert(json);
				
				listWrong = json.facets.published.entries;
				load_time(timePicked, filter_merchant, filter_provider, filter_card_type);
			},
			error : function(xhr, message, error) {
				console.error("Error while loading data from ElasticSearch",
						message);
				throw (error);
			}
		});
	};
	
</script>

<script>
	function draw(json){
		
		var chart;

		nv.addGraph(function() {
			chart = nv.models.lineChart().options({
				margin : {
					left : 100,
					bottom : 100
				},
				x : function(d, i) {
					return i
				},
				showXAxis : true,
				showYAxis : true,
				transitionDuration : 250
			});

			// chart sub-models (ie. xAxis, yAxis, etc) when accessed directly, return themselves, not the parent chart, so need to chain separately
			chart.xAxis.axisLabel("Thời gian").tickFormat(d3.format(',.1f'));

			chart.yAxis.axisLabel('Số lượng').tickFormat(d3.format(',.2f'));

			//var format = d3.time.format("%Y-%m-%d %H:%m:%s"); 
			chart.xAxis.tickFormat(function (d) {
				var date = new Date(json[d].time);
				
				//return [date.getDate(), date.getMonth()+1].join('/');
				return [date.getDate(), date.getMonth()+1].join('/') +" " + [date.getHours(), date.getMinutes()].join(':');
			});
			
			d3.select('#line_chart svg').datum(generateLineCoordinates()).call(chart);

			
			//TODO: Figure out a good way to do this automatically
			nv.utils.windowResize(chart.update);
			//nv.utils.windowResize(function() { d3.select('#chart1 svg').call(chart) });

			chart.dispatch.on('stateChange', function(e) {
				nv.log('New State:', JSON.stringify(e));
			});

			return chart;
		});
		
		function generateLineCoordinates(){
							
			for (var i = 0; i < json.length; i++) {
				if((listSuccess.length-1) < i || json[i].time != listSuccess[i].time){
					var blank = {time:json[i].time, count:0};
					listSuccess.splice(i, 0, blank);
				}
				if((listError.length-1) < i || json[i].time != listError[i].time){
					var blank = {time:json[i].time, count:0};
					listError.splice(i, 0, blank);
				}
				if((listWrong.length-1) < i || json[i].time != listWrong[i].time){
					var blank = {time:json[i].time, count:0};
					listWrong.splice(i, 0, blank);
				}
			}
			
			var lineTotal = [], lineSuccess = [], lineError = [], lineWrong = [];
			for (var i = 0; i < json.length; i++) {
				lineTotal.push({
					x : i,
					y : json[i].count
				}); 
				
				lineSuccess.push({
					x : i,
					y : listSuccess[i].count
				});
				
				lineError.push({
					x : i,
					y : listError[i].count
				}); 
				lineWrong.push({
					x : i,
					y : listWrong[i].count
				});
				
			}
			
			return [ {
				
				values : lineTotal,
				key : "Tất cả",
				color : "#2222ff"
			}
			,
			{
				
				values : lineSuccess,
				key : "Thành công",
				color : "#2ca02c"
			}
			,
			{
				
				values : lineError,
				key : "Thẻ lỗi",
				color : "#FF0000"
			},
			{
	
				values : lineWrong,
				key : "Thẻ sai",
				color : "#DAA520"
			}
			];
		}
		
	}
	
</script>